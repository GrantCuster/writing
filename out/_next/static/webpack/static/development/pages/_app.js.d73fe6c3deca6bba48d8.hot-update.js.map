{"version":3,"file":"static/webpack/static/development/pages/_app.js.d73fe6c3deca6bba48d8.hot-update.js","sources":["webpack:///./parts/Layout.js"],"sourcesContent":["import Head from 'next/head'\nimport { p } from '../parts/Utils'\nimport { debounce } from 'lodash'\nimport posts from '../posts'\nimport { MDXProvider } from '@mdx-js/react'\nimport { font_size, line_height, font_min, sm } from '../../exp/parts/Static'\nimport { Hd, Vd, Rect } from '../parts/Dividers'\nimport Header from '../parts/Header'\nimport PostPreview from '../parts/PostPreview'\n\nlet ofs = 16\n\nexport class PostLayout extends React.Component {\n  render() {\n    let { children, pathname } = this.props\n    let {\n      grem,\n      ogrem,\n      center_text,\n      afs,\n      fsn,\n      fs,\n      columns,\n      column_width,\n      offset,\n      ww,\n      wh,\n    } = this.props\n\n    let post_index = posts.map(p => p.urlPath).indexOf(pathname)\n    let prev_index = post_index - 1\n    let next_index = post_index + 1\n    let post = posts[post_index]\n    let prev_post = posts[prev_index]\n    let next_post = posts[next_index]\n\n    let components = {\n      img: props => {\n        let address = props.src\n        address.replace('{{ site.github.url }}', '')\n        address = address.startsWith('http') ? address : `/static${address}`\n        return (\n          <div\n            style={{\n              // width: optim_width + ogrem,\n              // marginLeft: -grem / 2 - ogrem / 2,\n              position: 'relative',\n            }}\n          >\n            <img\n              src={address}\n              alt={props.alt}\n              style={{\n                display: 'block',\n                margin: '0',\n                maxWidth: optim_width + ogrem,\n                width: '100%',\n              }}\n            />\n          </div>\n        )\n      },\n    }\n\n    let post_date = new Date(post.publishDate)\n    let published_date = `${post_date.toLocaleString('en-us', {\n      month: 'short',\n    })} ${(post_date.getDay() + 1)\n      .toString()\n      .padStart(2, '0')} ${post_date.getFullYear()}`\n\n    let preview_columns = Math.max(\n      (columns / 2) % 2 === 0 ? columns / 2 : columns / 2 - 1,\n      4\n    )\n    let preview_offset = Math.max(0, columns / 2 - preview_columns)\n\n    return (\n      <div>\n        <Head>\n          <link\n            rel=\"icon\"\n            type=\"image/x-icon\"\n            href=\"static/images/favicon.png\"\n          />\n\n          <title>{post.title} - Cloudera Fast Forward</title>\n        </Head>\n\n        <style jsx global>{`\n          h1,\n          h2,\n          h3,\n          h4,\n          h5,\n          h6 {\n            font-weight: 400;\n            font-style: normal;\n            margin: 0;\n          }\n          h1 {\n            font-size: ${fs * 3}px;\n            line-height: 1.25;\n          }\n          h2 {\n            font-size: ${fs * 2}px;\n            line-height: 1.25;\n            padding-top: ${grem}px;\n            margin-bottom: ${grem}px;\n          }\n          h3 {\n            font-size: ${fs * 1.5}px;\n            line-height: 1.25;\n            padding-top: ${grem}px;\n            margin-bottom: ${grem}px;\n          }\n          h4 {\n            font-size: ${fs * 1.25}px;\n            line-height: 1.25;\n            padding-top: ${grem}px;\n            margin-bottom: ${grem}px;\n          }\n          h5 {\n            font-size: ${fs * 0.75}px;\n            line-height: 1.4375;\n            margin-bottom: ${grem / 2}px;\n            padding-bottom: ${grem / 2}px;\n            // margin-left: -${grem / 2 + ogrem / 2}px;\n            // margin-right: -${grem / 2 + ogrem / 2}px;\n            margin-top: -${grem / 2}px;\n          }\n          h5 em {\n          }\n          p {\n            margin: 0 0 ${grem}px 0;\n          }\n        `}</style>\n        {optimal !== null ? (\n          <div style={{ position: 'relative' }}>\n            <Header\n              grem={grem}\n              logo_stroke={logo_stroke}\n              cap={cap}\n              fsn={fsn}\n              fs={fs}\n            />\n\n            <div\n              style={{\n                paddingLeft: ogrem / 2,\n                paddingRight: ogrem / 2,\n                paddingTop: grem,\n              }}\n            >\n              <div style={{}}>\n                <div\n                  style={{\n                    display: 'flex',\n                    marginBottom: grem / 2,\n                    width: Math.min(columns, 6) * column_width,\n                    marginLeft:\n                      ((columns - Math.min(columns, 6)) / 2) * column_width +\n                      offset,\n                  }}\n                >\n                  <div\n                    style={{\n                      width: column_width * 1,\n                      padding: p(0, grem / 2),\n                      position: 'relative',\n                      fontSize: fs * (6 / 8),\n                      letterSpacing: '0.03em',\n                      textTransform: 'uppercase',\n                      lineHeight: 1,\n                    }}\n                  >\n                    {published_date}\n                  </div>\n                  <div\n                    style={{\n                      width: column_width * 1,\n                      padding: p(0, grem / 2),\n                      position: 'relative',\n                      fontSize: fs * (6 / 8),\n                      letterSpacing: '0.03em',\n                      textTransform: 'uppercase',\n                      lineHeight: 1,\n                    }}\n                  >\n                    {post.post_type}\n                  </div>\n                </div>\n                <div style={{ marginBottom: 0 }}>\n                  <div\n                    style={{\n                      fontSize: fs * 3,\n                      lineHeight: 1.25,\n                      padding: p(0, grem / 2),\n                      width: Math.min(columns, 6) * column_width,\n                      marginLeft:\n                        ((columns - Math.min(columns, 6)) / 2) * column_width +\n                        offset,\n                    }}\n                  >\n                    {post.title}\n                  </div>\n                </div>\n\n                <div\n                  style={{\n                    display: 'flex',\n                    width: columns > 4 ? 5 * column_width : 4 * column_width,\n                    marginLeft:\n                      (columns > 4\n                        ? ((columns - 4) / 2 - 1) * column_width\n                        : ((columns - 4) / 2) * column_width) + offset,\n                  }}\n                >\n                  {columns > 4 ? (\n                    <div\n                      style={{\n                        padding: p(grem, grem / 2, grem, grem / 2),\n                        width: column_width,\n                      }}\n                    >\n                      {post.author ? (\n                        <div>\n                          by{' '}\n                          {post.author_link ? (\n                            <a href={post.author_link}>{post.author}</a>\n                          ) : (\n                            post.author\n                          )}\n                        </div>\n                      ) : null}{' '}\n                    </div>\n                  ) : null}\n\n                  <div\n                    style={{\n                      width: column_width * 4,\n                      padding: p(grem, grem / 2, grem, grem / 2),\n                    }}\n                  >\n                    <MDXProvider components={components}>\n                      {children}\n                    </MDXProvider>\n                    <div\n                      style={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        padding: grem / 2,\n                      }}\n                    >\n                      <img\n                        style={{\n                          height: cap,\n                          width: cap,\n                          position: 'relative',\n                          display: 'block',\n                        }}\n                        src=\"/static/images/ff.png\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  position: 'relative',\n                }}\n              >\n                {next_post ? (\n                  <div\n                    style={{\n                      position: 'relative',\n                      marginLeft: -ogrem / 2,\n                      marginRight: -ogrem / 2,\n                      marginBottom: grem,\n                    }}\n                  >\n                    <div\n                      style={{\n                        marginLeft: -ogrem / 2,\n                        marginRight: -ogrem / 2,\n                        padding: p(\n                          grem / 4,\n                          grem / 2 + ogrem / 2,\n                          grem / 4,\n                          grem / 2 + offset + ogrem\n                        ),\n                      }}\n                    >\n                      Before\n                    </div>\n                    <PostPreview\n                      post={posts[next_index]}\n                      grem={grem}\n                      ww={ww}\n                      column_width={column_width}\n                      fs={fs}\n                      ogrem={ogrem}\n                      extra_left={ogrem / 2 + offset}\n                      extra_right={ogrem / 2 + offset}\n                      columns={columns}\n                    />\n                    <Hd align=\"b\" />\n                  </div>\n                ) : null}\n\n                {prev_post ? (\n                  <div\n                    style={{\n                      position: 'relative',\n                      marginLeft: -ogrem / 2,\n                      marginRight: -ogrem / 2,\n                      marginBottom: grem,\n                    }}\n                  >\n                    <div\n                      style={{\n                        marginLeft: -ogrem / 2,\n                        marginRight: -ogrem / 2,\n                        padding: p(\n                          grem / 4,\n                          grem / 2 + ogrem / 2,\n                          grem / 4,\n                          grem / 2 + offset + ogrem\n                        ),\n                      }}\n                    >\n                      After\n                    </div>\n                    <PostPreview\n                      post={posts[prev_index]}\n                      grem={grem}\n                      ww={ww}\n                      column_width={column_width}\n                      fs={fs}\n                      ogrem={ogrem}\n                      extra_left={ogrem / 2 + offset}\n                      extra_right={ogrem / 2 + offset}\n                      columns={columns}\n                    />\n\n                    <Hd align=\"b\" />\n                  </div>\n                ) : null}\n              </div>\n\n              <div style={{ paddingBottom: grem }}>\n                <div\n                  style={{\n                    fontSize: fs * 2,\n                    lineHeight: 1.25,\n                    padding: p(0, grem / 2, 0, grem / 2),\n                    marginBottom: grem / 2,\n                    ...center_text,\n                  }}\n                >\n                  About\n                </div>\n                <div\n                  style={{\n                    padding: p(0, grem / 2),\n                    marginBottom: grem / 2,\n                    ...center_text,\n                    ...fsn,\n                  }}\n                >\n                  Cloudera Fast Forward Labs is an applied machine learning\n                  research group. We help organizations recognize and develop\n                  new product and business opportunities through emerging\n                  technologies.{' '}\n                </div>\n                <div\n                  style={{\n                    padding: p(0, grem / 2),\n                    marginBottom: grem / 2,\n                    ...center_text,\n                    ...fsn,\n                  }}\n                >\n                  <a href=\"https://www.cloudera.com/products/fast-forward-labs-research.html\">\n                    Learn more about working with us.\n                  </a>\n                </div>\n              </div>\n            </div>\n\n            <div style={{}}>\n              <div style={{ position: 'relative' }}>\n                <Hd width=\"100%\" align=\"t\" fs={fs} />\n                <div\n                  style={{\n                    padding: grem / 2,\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    flexWrap: 'wrap',\n                    ...fsn,\n                  }}\n                >\n                  <div>\n                    <a href=\"/\">Blog</a>\n                  </div>\n                  <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n                    <div style={{ marginRight: grem / 2 }}>\n                      <a href=\"https://www.cloudera.com/products/fast-forward-labs-research.html\">\n                        Cloudera\n                      </a>\n                    </div>\n                    <div style={{ marginRight: grem / 2 }}>\n                      <a href=\"https://blog.fastforwardlabs.com/\">\n                        AI Experiments\n                      </a>\n                    </div>\n                    <div style={{}}>\n                      <a href=\"https://twitter.com/fastforwardlabs\">Twitter</a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    )\n  }\n}\n"],"mappings":"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","sourceRoot":""}