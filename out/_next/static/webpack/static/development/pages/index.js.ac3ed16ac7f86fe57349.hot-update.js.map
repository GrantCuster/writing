{"version":3,"file":"static/webpack/static/development/pages/index.js.ac3ed16ac7f86fe57349.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport Head from 'next/head'\nimport { Hd, Vd, Rect, Fdiv } from '../parts/Dividers'\nimport { styles, p } from '../parts/Utils'\nimport { pack } from '../parts/Binpack-2d-port'\nimport FFuture from '../parts/FFuture'\nimport ExpGrid from '../parts/ExpGrid'\nimport { debounce } from 'lodash'\nimport * as chroma from 'chroma-js'\nimport { experiments } from '../data/experiments'\n\nlet font_size = 16\nlet line_height = 1.5\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props)\n    var now = new Date()\n    var start = new Date(now.getFullYear(), 0, 0)\n    var diff =\n      now -\n      start +\n      (start.getTimezoneOffset() - now.getTimezoneOffset()) * 60 * 1000 * 24\n    var oneDay = 1000 * 60 * 60 * 24\n    var day_in_year = Math.floor(diff / oneDay)\n\n    this.state = {\n      ww: 0,\n      optimal: null,\n      hex: chroma.hcl(Math.floor((day_in_year / 365) * 360), 60, 80),\n    }\n    this.setSize = this.setSize.bind(this)\n    this.setSize = debounce(this.setSize, 100)\n  }\n\n  setSize() {\n    let canvas = document.createElement('canvas')\n    let ctx = canvas.getContext('2d')\n    ctx.font = `normal ${font_size}px Interi`\n    let width = ctx.measureText(\n      'thousand writers. With over a million people from various fields working'\n    ).width\n    window.ratio = Math.max(window.innerWidth / width, 1)\n\n    this.setState(\n      {\n        ww: window.innerWidth,\n        wh: window.innerHeight,\n        optimal: width + font_size * line_height,\n      },\n      () => {}\n    )\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.setSize)\n    this.setSize()\n    let me = this\n    document.fonts.ready.then(function() {\n      me.setSize()\n    })\n  }\n\n  render() {\n    let { ww, optimal, hex } = this.state\n\n    let grem = font_size * line_height\n\n    let divisions = 4\n\n    let target_width = optimal / divisions\n    let columns = Math.floor(ww / target_width)\n    let og_columns = Math.floor(ww / target_width)\n    let column_width = ww / columns\n\n    let offset = 0\n    let even = columns % 2 === 0\n    if (!even) {\n      columns = columns - 1\n      offset = column_width / 2\n    }\n\n    let optim_width = column_width * divisions\n    let optim_left = (columns / 2 - divisions / 2) * column_width + offset\n\n    let ratio = column_width / target_width\n\n    if (columns < divisions) {\n      offset = 0\n      columns = 2\n      column_width = ww / 2\n      optim_width = column_width * 2\n      optim_left = 0\n      ratio = 1\n    }\n\n    let fs = font_size * ratio\n\n    let center_text = {\n      width: optim_width,\n      marginLeft: optim_left,\n    }\n\n    let target_height = grem * 12\n    let spacer = grem\n\n    let sized_experiments = experiments.map(e => {\n      let w = Math.round(column_width * 2 - spacer)\n      let h = Math.round(target_height)\n      if (e.featured === true) {\n        return {\n          width: Math.min(w * 2 + spacer, ww - spacer),\n          height: h * 2 + spacer,\n        }\n      } else {\n        return {\n          width: Math.min(w, ww - spacer),\n          height: h,\n        }\n      }\n    })\n\n    let avail = ww - offset * 2\n\n    let packed = pack(\n      { width: avail, height: Infinity },\n      sized_experiments,\n      spacer\n    )\n\n    let cap = grem * (2048 / 2816)\n\n    let fs_normal = {\n      fontSize: fs,\n    }\n\n    let svg_scale = 35 / (cap + grem / 8)\n\n    return (\n      <div>\n        <Head>\n          <link\n            rel=\"preload\"\n            href=\"static/fonts/Inter-Regular.woff2?v=3.5\"\n            as=\"font\"\n            type=\"font/woff2\"\n            crossOrigin=\"*\"\n          />\n        </Head>\n        <style jsx global>{`\n          :root {\n            --background: ${hex};\n          }\n          @font-face {\n            font-family: 'Interi';\n            font-style: normal;\n            font-weight: 400;\n            src: url('static/fonts/Inter-Regular.woff2?v=3.5') format('woff2'),\n              url('static/fonts/Inter-Regular.woff?v=3.5') format('woff');\n          }\n          @font-face {\n            font-family: 'Interi';\n            font-style: italic;\n            font-weight: 400;\n            src: url('static/fonts/Inter-Italic.woff2?v=3.5') format('woff2'),\n              url('static/fonts/Inter-Italic.woff?v=3.5') format('woff');\n          }\n          * {\n            box-sizing: border-box;\n          }\n          html {\n            font-family: 'Interi', serif;\n            font-size: ${font_size}px;\n            line-height: ${line_height};\n            text-rendering: optimizelegibility;\n            font-feature-settings: 'kern';\n            font-kerning: normal;\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n          }\n          body {\n            margin: 0;\n            overflow-x: hidden;\n          }\n          a {\n            color: inherit;\n            text-decoration: underline;\n          }\n          .hover_box:hover {\n            transition: box-shadow 0.05s linear;\n            box-shadow: 0 0 ${grem / 2}px rgba(0, 0, 0, 0.4);\n          }\n          .hover_box:hover .hover_name {\n          }\n        `}</style>\n        {optimal !== null ? (\n          <div>\n            <div\n              style={{\n                position: 'fixed',\n                left: 0,\n                top: 0,\n                width: ww,\n                height: '100vh',\n                display: 'none',\n              }}\n            >\n              {[...Array(columns)].map((n, i) => (\n                <div\n                  key={i}\n                  style={{\n                    position: 'absolute',\n                    left: i * column_width + offset,\n                    top: 0,\n                    width: column_width,\n                    height: '100vh',\n                    outline: 'solid 1px blue',\n                  }}\n                />\n              ))}\n            </div>\n\n            <div\n              style={{ position: 'fixed', left: 0, bottom: 0, display: 'none' }}\n            >\n              <div>og_columns: {og_columns}</div>\n              <div>{even ? 'even' : 'odd'}</div>\n              <div>font size: {fs}</div>\n            </div>\n            <div\n              style={{\n                padding: grem / 2,\n                display: 'flex',\n                justifyContent: 'space-between',\n                ...fs_normal,\n              }}\n            >\n              <div>\n                <div style={{ paddingLeft: grem * 1.25 }}>\n                  Cloudera Fast Forward\n                </div>\n                <svg\n                  width=\"36\"\n                  height=\"36\"\n                  viewBox=\"0 0 36 36\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={cap + grem / 8}\n                  height={cap + grem / 8}\n                  style={{\n                    position: 'absolute',\n                    left: grem / 2,\n                    top: grem / 2 + (grem - cap) / 2 - grem / 16,\n                  }}\n                >\n                  <path\n                    d=\"M18 18L1 1V35L18 18Z\"\n                    stroke=\"black\"\n                    strokeWidth={fs * styles.stroke_mult * svg_scale}\n                    strokeLinejoin=\"bevel\"\n                  />\n                  <path\n                    d=\"M35 18L18 1V35L35 18Z\"\n                    stroke=\"black\"\n                    strokeWidth={fs * styles.stroke_mult * svg_scale}\n                    strokeLinejoin=\"bevel\"\n                  />\n                  <path\n                    d=\"M1 1H35V18H1V1Z\"\n                    strokeWidth={fs * styles.stroke_mult * svg_scale}\n                    stroke=\"black\"\n                  />\n                  <path\n                    d=\"M1 18H35V35H1V18Z\"\n                    strokeWidth={fs * styles.stroke_mult * svg_scale}\n                    stroke=\"black\"\n                  />\n                </svg>\n              </div>\n              <div style={{ display: 'flex' }}>\n                <div style={{ marginRight: grem / 2 }}>\n                  <a href=\"#\">Main</a>\n                </div>\n                <div style={{}}>\n                  <a href=\"#\">Blog</a>\n                </div>\n              </div>\n            </div>\n            <div\n              style={{\n                padding: 0,\n                paddingBottom: grem / 2,\n                position: 'relative',\n              }}\n            >\n              <div style={{ position: 'relative' }}>\n                <Hd width={ww} align=\"t\" stroke={fs * styles.stroke_mult} />\n              </div>\n            </div>\n            <div\n              style={{\n                ...center_text,\n                paddingLeft: grem / 2,\n                paddingRight: grem / 2,\n                fontSize: fs * 3,\n                lineHeight: 1,\n                paddingTop: grem / 2,\n              }}\n            >\n              Experiments\n            </div>\n            <div\n              style={{\n                ...center_text,\n                padding: grem / 2,\n                ...fs_normal,\n              }}\n            >\n              Machine learning visualizations and code\n            </div>\n\n            <div\n              style={{\n                padding: grem / 2,\n                paddingLeft: grem / 2 + offset,\n              }}\n            >\n              <ExpGrid\n                width={ww}\n                grem={grem}\n                experiments={experiments}\n                packed={packed}\n                spacer={spacer}\n                target_height={target_height}\n                fs={fs}\n              />\n            </div>\n\n            <div\n              style={{\n                ...center_text,\n                fontSize: fs * 2,\n                lineHeight: 1.25,\n                padding: grem / 2,\n                paddingBottom: 0,\n              }}\n            >\n              About\n            </div>\n\n            <div\n              style={{\n                ...center_text,\n                padding: grem / 2,\n                ...fs_normal,\n              }}\n            >\n              Cloudera Fast Forward is an applied machine learning research\n              group. We help organizations recognize and develop new product and\n              business opportunities through emerging technologies.{' '}\n            </div>\n            <div style={{ ...center_text, padding: grem / 2, paddingTop: 0 }}>\n              <a href=\"#\">Learn more about working with us.</a>\n            </div>\n            <div\n              style={{\n                position: 'relative',\n                paddingTop: grem / 2,\n              }}\n            >\n              <Hd width={ww} align=\"b\" stroke={fs * styles.stroke_mult} />\n            </div>\n            <div\n              style={{\n                paddingTop: grem,\n              }}\n            />\n          </div>\n        ) : null}\n      </div>\n    )\n  }\n}\n\nexport default Index\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAjBA;AAkBA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAHA;AAOA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAKA;AAEA;AACA;AADA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAyDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AAHA;AARA;AAAA;AAAA;AAeaA;AAEA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAEA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAEA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AA/WA;AACA;AAiXA;;;;A","sourceRoot":""}