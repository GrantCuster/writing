(window.webpackJsonp=window.webpackJsonp||[]).push([["1245"],{"3Kfg":function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",function(){return r}),n.d(t,"default",function(){return c});var a=n("kOwS"),s=n("qNsG"),o=(n("q1tI"),n("E/Ix")),r={title:"Serverless data science",date:"2018-01-26 12:08",preview_image:"/images/2018/01/serverless_pywren-1515449109658.png",feature:!1,published:!0,post_type:"Newsletter"},i={frontMatter:r},l="wrapper";function c(e){var t=e.components,n=Object(s.a)(e,["components"]);return Object(o.b)(l,Object(a.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Cloud computing has transformed enterprise IT. It makes it possible to rapidly\nscale up and down a complex and global infrastructure, without the overhead of\na datacenter. But living in the cloud can be expensive, and you still need to\nmaintain computers and their operating systems, even if they are virtual.\nThat's why we've been watching with interest the rise of \"serverless\"\ncomputing."),Object(o.b)("p",null,'Serverless has the potential to open up "big data" work to mere mortal data\nscientists who don\'t have the budget or engineering support for a\nlong-lived analytics cluster, and to make life simpler and reduce costs for\nthose that do.'),Object(o.b)("p",null,'Traditional cloud "elastic compute" systems (like Amazon\'s EC2, Google\'s Computer\nEngine, or Azure\'s Virtual Machines) allow you to run applications without\nmaintaining hardware. The goal of "serverless" is to go even further, and make\nit possible to run applications without worrying about hardware ',Object(o.b)("em",{parentName:"p"},"or")," the\noperating system."),Object(o.b)("p",null,"Serverless environments (like Amazon's Lambda, Google's Cloud Functions, or Azure's\nFunctions) can be thought of as computing environments that pop into existence\nfor the duration of a single function call, and are then destroyed. Configuring\nand maintaining the underlying operating system is somebody else's problem."),Object(o.b)("p",null,"Because the serverless instance exists only for the duration of the function,\nthere's no idle time and your bill scales almost perfectly with the amount of\ncompute you use. Combined with the fact that you no longer need to configure and\nmaintain the operating system, this can result in big savings. For example,\nour friends at Postlight converted their Readability application to run on AWS\nLambda and ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://trackchanges.postlight.com/serving-39-million-requests-for-370-month-or-how-we-reduced-our-hosting-costs-by-two-orders-of-edc30a9a88cd"}),"reduced the monthly cost from over $10,000 to\n$370"),"."),Object(o.b)("p",null,"But it's not all good news. Because the environment ends after the function\nfinishes, input and output must occur via a web API or a database connection.\nThere is no internal state or disk. And the various cloud providers place CPU,\nRAM, time, and programming language constraints on what you can do. (For example,\nAWS Lambda functions must run Python, C#, node.js or Java; R is not an option.\nAnd the function must return in less than 300 seconds and use no more than\n1.5Gb of RAM.)"),Object(o.b)("p",null,"These limitations might seem to make serverless less appealing to power-hungry\ndata scientists and data engineers - and indeed, so far most of the prominent\nuses of serverless have been in web applications, where the computational\nrequirements are less intense. But in many ways the constraints of serverless\nare similar to those faced in distributed analytics clusters running Hadoop or\nSpark. To do data analytics in these environments, we have the map-reduce\ncomputing paradigm, which parallelizes work by splitting it into small parcels."),Object(o.b)("p",null,Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"/images/2018/01/serverless_pywren-1515449109658.png",alt:null}))),Object(o.b)("h5",null,"PyWren's computational power can grow to many TFLOPS as the number of workers (inexpensive AWS Lambda instances in this case) increases. Image credit: ",Object(o.b)("a",Object(a.a)({parentName:"h5"},{href:"https://arxiv.org/abs/1702.04024"}),"Occupy the Cloud: Distributed Computing for the 99%")),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"http://pywren.io/"}),"PyWren"),' is a distributed analytics tool that connects the\ndots. It splits up large analytics jobs into smaller parcels of work, and ships\nthem off to hundreds or even thousands of serverless AWS Lambda instances. This\nmakes PyWren (with AWS Lambda as a computational "backend") a light-weight\nalternative to complex, expensive (and admittedly more robust) map-reduce\nframeworks such as Hadoop and Spark. '),Object(o.b)("p",null,"And - perhaps most intriguing for us at Cloudera Fast Forward Labs, given our\ninterest in machine learning - it's exciting to see serverless used to ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"http://tothestars.io/blog/2016/10/19/serverless-ai"}),"speed up\nhyperparamter\noptimization"),", a relatively\nsimple (but computationally intensive) part of model building."),Object(o.b)("p",null,"For more on PyWren, see ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://arxiv.org/abs/1702.04024"}),"Occupy the Cloud: Distributed Computing for\nthe 99%"),". For more on the implications of\nserverless more generally, see ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"http://www.doc.ic.ac.uk/~rbc/papers/fse-serverless-17.pdf"}),"Serverless Computing: Economic and\nArchitectural\nImpact"),".\n"))}c.isMDXComponent=!0},ZA06:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/posts/2018-01-26-serverless-data-science",function(){var e=n("3Kfg");return{page:e.default||e}}])}},[["ZA06","5d41","9da1"]]]);