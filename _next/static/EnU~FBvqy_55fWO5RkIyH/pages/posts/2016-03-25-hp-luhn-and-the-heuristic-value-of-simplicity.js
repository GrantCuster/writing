(window.webpackJsonp=window.webpackJsonp||[]).push([["ee9b"],{"93mQ":function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/posts/2016-03-25-hp-luhn-and-the-heuristic-value-of-simplicity",function(){var e=n("P8By");return{page:e.default||e}}])},P8By:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",function(){return r}),n.d(t,"default",function(){return c});var a=n("kOwS"),o=n("qNsG"),i=(n("q1tI"),n("E/Ix")),r={title:"H.P. Luhn and the Heuristic Value of Simplicity",date:new Date("2016-03-25T16:25:43.000Z"),tags:["language processing","product","design","history"],layout:"post",redirect_from:["/post/141666523533/hp-luhn-and-the-heuristic-value-of-simplicity"],preview_image:"http://68.media.tumblr.com/8ad092dc44ae1ad68bad697a55274b30/tumblr_inline_o4lon7By6N1ta78fg_540.gif"},s={frontMatter:r},l="wrapper";function c(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)(l,Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"http://68.media.tumblr.com/8ad092dc44ae1ad68bad697a55274b30/tumblr_inline_o4lon7By6N1ta78fg_540.gif",alt:null}))),Object(i.b)("p",null,Object(i.b)("p",null,"The Fast Forward Labs team is putting final touches on our ",Object(i.b)("i",null,"Summarization "),"research, which explains approaches to making text quantifiable and computable. Stay tuned for a series of resources on the topic, including an online talk May 24 where we’ll cover technical details and survey use cases for financial services, media, and professional services with ",Object(i.b)("a",{href:"http://www.agolo.com/"},"Agolo"),". Sign up ",Object(i.b)("a",{href:"https://textsummarizationwebinar.splashthat.com/"},"here"),"! ",Object(i.b)("br",null)),Object(i.b)("p",null,"In writing our reports, we try not only to inform readers about the libraries, math, and techniques they can use to put a system into production today, but also the lessons they can learn from historical approaches to a given topic. Turning a retrospective eye towards past work can be particularly helpful when using an algorithm like a ",Object(i.b)("a",{href:"http://karpathy.github.io/2015/05/21/rnn-effectiveness/"},"recurrent neural network"),". That’s because neural networks are notoriously hard to interpret: feature engineering is left to the algorithm, and involves a ",Object(i.b)("a",{href:"http://blog.fastforwardlabs.com/2015/09/24/how-do-neural-networks-learn.html"},"complex interplay")," between the weight of individual computing nodes and the connections that link them together. In the face of this complexity, it can be helpful to keep former, more simple techniques in mind as a heuristic guide - or model - to shape our intuition about how contemporary algorithms work. "),Object(i.b)("p",null,"For example, we found that ",Object(i.b)("a",{href:"https://en.wikipedia.org/wiki/Hans_Peter_Luhn"},"H.P. Luhn"),"’s 1958 paper ",Object(i.b)("i",null,Object(i.b)("a",{href:"http://courses.ischool.berkeley.edu/i256/f06/papers/luhn58.pdf"},"The Automatic Creation of Literary Abstracts")," "),"provided a simple heuristic to help wrap our heads around the basic steps that go into probabilistic models for summarizing text. (For those interested in history, Luhn also wrote ",Object(i.b)("a",{href:"http://altaplana.com/ibmrd0204H.pdf"},"a paper about business intelligence")," in 1958 that feels like it could have been written today, as it highlights the growing need to automate information retrieval to manage an unwieldy amount of information.) Our design lead, ",Object(i.b)("a",{href:"https://twitter.com/GrantCuster"},"Grant Custer"),", designed a prototype you can play with to walk through Luhn’s method. "),Object(i.b)("p",null,Object(i.b)("a",{href:"http://fastforwardlabs.github.io/luhn/"},"Here’s the link")," to access the live demo. Feel free to use the suggested text, or to play around your own (and share results on Twitter!). ",Object(i.b)("br",null)),Object(i.b)("p",null,"Luhn’s algorithm begins by transforming the content of sentences into a mathematical expression, or vector. He uses a “bag of words” model, which ignores filler words like “the” or “and”, and counts the number of times remaining words appear in each sentence.",Object(i.b)("br",null))),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"http://68.media.tumblr.com/0f8a87d296daffc2b71e724192848f77/tumblr_inline_o4lpgynJ9M1ta78fg_540.png",alt:null}))),Object(i.b)("p",null,Object(i.b)("p",null,"Luhn’s intuition was that a word that appears many times in a document is important to the document’s meaning. Under this assumption, a sentence that contains many of the words that appear many times in the overall document is itself highly representative of that document. In our demo, if a document’s most significant words are protein (appears 8 times) and DNA (appears 7 times), then this implies that the sentence ","“","Proteins are made by tiny machines in the cell called ribosomes” is a useful one to extract in the summary. Once this sentence scoring is complete, the last step is simply to select those sentences with the highest overall rankings. ",Object(i.b)("br",null))),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"http://68.media.tumblr.com/9cc82411e5a2c3e93d857ab812efbc86/tumblr_inline_o4lporO1wx1ta78fg_540.png",alt:null}))),Object(i.b)("p",null,Object(i.b)("p",null,"Luhn himself notes that his method for determining the relative significance of sentences “gives no consideration to the meaning of words or the arguments expressed by word combinations.” It is, rather, a “probabilistic one” based on counting. The algorithm does not select the sentence about ribosomes given its understanding of the importance ribosomes have to the topic in question; it selects that sentence because it densely packs together words that appear frequently across the longer document. "),Object(i.b)("p",null,"The contemporary approaches we study in our upcoming report build upon this basic theme. One approach, ",Object(i.b)("a",{href:"https://www.cs.princeton.edu/~blei/papers/Blei2012.pdf"},"topic modeling using Latent Dirichlet Allocation")," (LDA), groups together words that co-occur into mathematical expressions called topics and then represents documents as a short vector of different topics weights (e.g., 50% words from the the protein topic, 30% words from the DNA topic, and 20% from the gene topic). While the mathematical models that determine these topics are much more complex than simply counting a bag of words, LDA borrows Luhn’s basic insight: that we can quantify semantic meaning as the relative distribution of like items in a data set."),Object(i.b)("p",null,"Stay tuned for more exciting language processing and deep learning resources throughout the spring! "),Object(i.b)("p",null,"- Kathryn ")))}c.isMDXComponent=!0}},[["93mQ","5d41","9da1"]]]);